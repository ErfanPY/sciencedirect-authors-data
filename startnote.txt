BROKER_CONNECTION_RETRY = True
BROKER_CONNECTION_MAX_RETRIES = 0
BROKER_CONNECTION_TIMEOUT = 120

The first line will make it retry whenever it fails, and the second one will disable the retry limit.

If that solution does not suit you enough, you can also try a high timeout (specified in seconds) for your app using this option:


#KILL TASK
>>> from celery.task.control import revoke
>>> revoke(task_id, terminate=True)

#REDIS
docker run --name myredis -p 6379:6379 redis redis-server --save "" --port 6379
redis-cli monitor #For logs
#MYSQL
sudo apt install mysql-server
sudo mysql_secure_installation
mysql -uroot -proot < sciencedirect_complete_clear.sql 

#CELERY
celery -A get_sd_ou.get_sd_ou.celery worker -Q main_search --loglevel=INFO -E -P eventlet -c 100  

#PYTHON
python3 -m get_sd_ou.app

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
nohup python -u ./test.py > output.log &
celery -A get_sd_ou.get_sd_ou.celery worker --loglevel=INFO --detach
docker run -d --name some-redis -p 6379:6379 redis


### backup db:

docker exec some-mysql sh -c 'exec mysqldump --all-databases -uroot -p"$MYSQL_ROOT_PASSWORD"' > /some/path/on/your/host/all-databases.sql
docker exec -i some-mysql sh -c 'exec mysql -uroot -p"$MYSQL_ROOT_PASSWORD"' < /some/path/on/your/host/all-databases.sql


#### start with volume:

docker run --name some-mysql -v /my/own/datadir:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql:tag
docker logs mysql1 2>&1 | grep GENERATED
docker exec -it mysql1 mysql -uroot -p


#### MySQL-server:

## docker pull mysql/mysql-server:latest
## docker run --name=mysql1 \
   --mount type=bind,src=/home/erfan-gh/dev/sciencedirect/sciencedirect-authors-data/db/my.cnf,dst=/etc/my.cnf \
   --mount type=bind,src=/home/erfan-gh/dev/sciencedirect/sciencedirect-authors-data/db/datadir,dst=/var/lib/mysql \
   --mount type=bind,src=/home/erfan-gh/dev/sciencedirect/sciencedirect-authors-data/db/scripts/,dst=/docker-entrypoint-initdb.d/ \
   --restart on-failure \
   -e MYSQL_ROOT_HOST=% \
   -p 3306:3306 \
   -d mysql/mysql-server:latest
GRANT ALL ON database_name.* TO user_name@'ip_address' IDENTIFIED BY 'user_password';



## docker exec -it mysql1 mysql -uroot -p
## mysql> ALTER USER 'root'@'localhost' IDENTIFIED BY 'password';
## docker start mysql1
